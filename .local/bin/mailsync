#!/bin/sh

notify() { notify-send --app-name="mutt-wizard" "$2 new mail ðŸ“§" ;}
messageinfo() { notify-send --app-name="mutt-wizard" "from ${from}: ${subject}" ;}

# Check account for new mail. Notify if there is new content.
syncandnotify() {
    acc="$(echo "${account}" | sed "s/.*\///")"
    if [ -z "${opts}" ]; then mbsync -c "${XDG_CONFIG_HOME:?}/isync/mbsyncrc" "${acc}"; else mbsync -c "${XDG_CONFIG_HOME}/isync/mbsyncrc" "${opts} ${acc}"; fi
    new=$(find "${XDG_DATA_HOME:?}/mail/${acc}/INBOX/new/" "${XDG_DATA_HOME}/mail/${acc}/Inbox/new/" "${XDG_DATA_HOME}/mail/${acc}/inbox/new/" -type f -newer "${XDG_CACHE_HOME:?}/.mailsynclastrun" 2> /dev/null)
    newcount=$(echo "${new}" | sed '/^\s*$/d' | wc -l)
    if [ "${newcount}" -gt "0" ]; then
        notify "${acc}" "${newcount}" &
        for file in ${new}; do
            # Extract subject and sender from mail.
            from=$(awk '/^From: / && ++n ==1,/^\<.*\>:/' "${file}" | perl -CS -MEncode -ne 'print decode("MIME-Header", $_)' | awk '{ $1=""; if (NF>=3)$NF=""; print $0 }' | sed 's/^[[:blank:]]*[\"'\''\<]*//;s/[\"'\''\>]*[[:blank:]]*$//')
            subject=$(awk '/^Subject: / && ++n == 1,/^\<.*\>: / && ++i == 2' "${file}" | head -n 1 | perl -CS -MEncode -ne 'print decode("MIME-Header", $_)' | sed 's/^Subject: //' | sed 's/^{[[:blank:]]*[\"'\''\<]*//;s/[\"'\''\>]*[[:blank:]]*$//' | tr -d '\n')
	    messageinfo &
        done
    fi
}

accounts="$(awk '/^Channel/ {print $2}' "${XDG_CONFIG_HOME}/isync/mbsyncrc")"

# Parallelize multiple accounts
for account in ${accounts}
do
    syncandnotify &
done

wait

notmuch new 2>/dev/null

#indicates the last run of mailsync
touch "${XDG_CACHE_HOME}/.mailsynclastrun"
